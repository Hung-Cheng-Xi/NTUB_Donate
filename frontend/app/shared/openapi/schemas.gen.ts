// This file is auto-generated by @hey-api/openapi-ts

export const AddressDataSchema = {
    properties: {
        address: {
            type: 'string',
            title: 'Address',
            example: '臺中市西屯區臺灣大道三段99號'
        }
    },
    type: 'object',
    required: ['address'],
    title: 'AddressData',
    description: '用於創建 Address 記錄的 schema，'
} as const;

export const AuthRequestSchema = {
    properties: {
        code: {
            type: 'string',
            title: 'Code'
        }
    },
    type: 'object',
    required: ['code'],
    title: 'AuthRequest'
} as const;

export const AuthResponseSchema = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        }
    },
    type: 'object',
    required: ['access_token'],
    title: 'AuthResponse'
} as const;

export const BarCodeDataSchema = {
    properties: {
        Group: {
            type: 'string',
            title: 'Group',
            example: '730044'
        },
        SerialNumber: {
            type: 'string',
            title: 'Serialnumber',
            example: '00001'
        },
        Time: {
            type: 'string',
            title: 'Time',
            example: '9991230'
        },
        Money: {
            type: 'string',
            title: 'Money',
            example: '1000'
        }
    },
    type: 'object',
    required: ['Group', 'SerialNumber', 'Time', 'Money'],
    title: 'BarCodeData',
    description: '用於創建 BarCode 記錄的 schema，'
} as const;

export const DocumentSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        category: {
            '$ref': '#/components/schemas/DocumentCategory',
            description: '相關法規類別',
            default: 'ALL'
        },
        description_link: {
            type: 'string',
            title: 'Description Link'
        },
        is_show: {
            type: 'boolean',
            title: 'Is Show'
        }
    },
    type: 'object',
    required: ['title', 'description_link', 'is_show'],
    title: 'Document'
} as const;

export const DocumentCategorySchema = {
    type: 'string',
    enum: ['ALL', 'DEPARTMENT_LAWS', 'COMMERCIAL_LAW', 'TAX_RELATED_LAWS', 'DONATION_FORMS_DOWNLOAD'],
    title: 'DocumentCategory',
    description: `表示相關法規方式的 Enum。

ALL: 全部
DEPARTMENT_LAWS: 各部法規
COMMERCIAL_LAW: 北商大法規
TAX_RELATED_LAWS: 相關稅法
DONATION_FORMS_DOWNLOAD: 捐款相關表單下載`
} as const;

export const DocumentCreateSchema = {
    properties: {
        title: {
            type: 'string',
            title: 'Title'
        },
        category: {
            '$ref': '#/components/schemas/DocumentCategory',
            default: 'ALL'
        },
        description_link: {
            type: 'string',
            title: 'Description Link'
        },
        is_show: {
            type: 'boolean',
            title: 'Is Show'
        }
    },
    type: 'object',
    required: ['title', 'description_link', 'is_show'],
    title: 'DocumentCreate',
    description: `用於創建 Document 記錄的 schema，
繼承了 DocumentBase，包含相關法規提交的所有必要字段。`
} as const;

export const DonationPurposeSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        lump_sum: {
            type: 'integer',
            title: 'Lump Sum'
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        memo: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Memo'
        },
        is_show: {
            type: 'boolean',
            title: 'Is Show'
        },
        unit_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Unit Id'
        }
    },
    type: 'object',
    required: ['title', 'lump_sum', 'description', 'is_show'],
    title: 'DonationPurpose'
} as const;

export const DonationPurposeCreateSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        lump_sum: {
            type: 'integer',
            title: 'Lump Sum'
        },
        summary: {
            type: 'string',
            title: 'Summary'
        },
        memo: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Memo'
        },
        is_show: {
            type: 'boolean',
            title: 'Is Show'
        },
        unit_id: {
            type: 'integer',
            title: 'Unit Id'
        }
    },
    type: 'object',
    required: ['name', 'lump_sum', 'summary', 'is_show', 'unit_id'],
    title: 'DonationPurposeCreate',
    description: `用於創建 DonationPurpose 時的 schema。
繼承了 DonationPurposeBase，並且增加了 unit_id，因為創建時需要指定一個單位。`
} as const;

export const DonationTypeSchema = {
    type: 'string',
    enum: ['STORE', 'BANK'],
    title: 'DonationType',
    description: `表示捐款方式的 Enum。

STORE: 使用實體店支付。
BANK: 使用銀行支付。`
} as const;

export const DonationsSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        username: {
            type: 'string',
            title: 'Username'
        },
        user_birthday: {
            type: 'string',
            format: 'date',
            title: 'User Birthday'
        },
        id_card: {
            type: 'string',
            title: 'Id Card'
        },
        phone_number: {
            type: 'string',
            title: 'Phone Number'
        },
        email: {
            type: 'string',
            title: 'Email'
        },
        identity: {
            '$ref': '#/components/schemas/DonorType',
            description: '捐款者身分',
            default: 'ALUMNI'
        },
        year: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Year'
        },
        gept: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Gept'
        },
        res_address: {
            type: 'string',
            title: 'Res Address'
        },
        registered_address: {
            type: 'string',
            title: 'Registered Address'
        },
        public_status: {
            '$ref': '#/components/schemas/PubicStatus',
            description: '公開狀態',
            default: 'PUBLIC'
        },
        memo: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Memo'
        },
        amount: {
            type: 'integer',
            title: 'Amount'
        },
        account: {
            type: 'string',
            title: 'Account'
        },
        type: {
            '$ref': '#/components/schemas/DonationType',
            description: '捐款方式',
            default: 'STORE'
        },
        status: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Status'
        },
        transaction_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Transaction Id'
        },
        input_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Input Date'
        },
        purpose_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Purpose Id'
        }
    },
    type: 'object',
    required: ['username', 'user_birthday', 'id_card', 'phone_number', 'email', 'res_address', 'registered_address', 'amount', 'account'],
    title: 'Donations'
} as const;

export const DonationsCreateSchema = {
    properties: {
        username: {
            type: 'string',
            title: 'Username'
        },
        user_birthday: {
            type: 'string',
            format: 'date',
            title: 'User Birthday'
        },
        id_card: {
            type: 'string',
            title: 'Id Card'
        },
        phone_number: {
            type: 'string',
            title: 'Phone Number'
        },
        email: {
            type: 'string',
            title: 'Email'
        },
        identity: {
            '$ref': '#/components/schemas/DonorType',
            default: 'ALUMNI'
        },
        year: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Year'
        },
        gept: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Gept'
        },
        res_address: {
            type: 'string',
            title: 'Res Address'
        },
        registered_address: {
            type: 'string',
            title: 'Registered Address'
        },
        public_status: {
            '$ref': '#/components/schemas/PubicStatus',
            default: 'PUBLIC'
        },
        memo: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Memo'
        },
        amount: {
            type: 'integer',
            title: 'Amount'
        },
        account: {
            type: 'string',
            title: 'Account'
        },
        type: {
            '$ref': '#/components/schemas/DonationType',
            default: 'STORE'
        },
        status: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Status'
        },
        transaction_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Transaction Id'
        },
        input_date: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Input Date'
        },
        purpose_id: {
            type: 'integer',
            title: 'Purpose Id'
        }
    },
    type: 'object',
    required: ['username', 'user_birthday', 'id_card', 'phone_number', 'email', 'res_address', 'registered_address', 'amount', 'account', 'purpose_id'],
    title: 'DonationsCreate',
    description: `用於創建 Donations 記錄的 schema，繼承 DonationsBase。
包含用戶需要提交的所有字段。`
} as const;

export const DonorTypeSchema = {
    type: 'string',
    enum: ['ALUMNI', 'STAFF', 'PARENT', 'COMMUNITY', 'CORPORATION', 'OTHER'],
    title: 'DonorType',
    description: `表示捐款者身份的 Enum。

ALUMNI: 校友
STAFF: 教職員
PARENT: 家長
COMMUNITY: 社區成員
CORPORATION: 公司
OTHER: 其他`
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const NewsSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        is_show: {
            type: 'boolean',
            title: 'Is Show'
        },
        unit_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Unit Id'
        }
    },
    type: 'object',
    required: ['date', 'title', 'description', 'is_show'],
    title: 'News'
} as const;

export const NewsCreateSchema = {
    properties: {
        date: {
            type: 'string',
            format: 'date',
            title: 'Date'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        is_show: {
            type: 'boolean',
            title: 'Is Show'
        },
        unit_id: {
            type: 'integer',
            title: 'Unit Id'
        }
    },
    type: 'object',
    required: ['date', 'title', 'description', 'is_show', 'unit_id'],
    title: 'NewsCreate',
    description: `用於創建 News 記錄的 schema，
繼承了 NewsBase，包含用戶提交的所有必要字段。`
} as const;

export const PubicStatusSchema = {
    type: 'string',
    enum: ['PUBLIC', 'ANONYMOUS', 'PARTIALLY'],
    title: 'PubicStatus',
    description: `表示公開狀態的 Enum。

PUBLIC: 公開
ANONYMOUS: 匿名
PARTIALLY: 匿名但受捐單位知曉`
} as const;

export const UnitSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        }
    },
    type: 'object',
    required: ['name'],
    title: 'Unit'
} as const;

export const UnitCreateSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        }
    },
    type: 'object',
    required: ['name'],
    title: 'UnitCreate',
    description: '用於創建 Unit 記錄的 schema，繼承了 UnitBase，包含用戶提交的所有必要字段。'
} as const;

export const UserSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        account: {
            type: 'string',
            title: 'Account'
        }
    },
    type: 'object',
    required: ['account'],
    title: 'User'
} as const;

export const UserCreateSchema = {
    properties: {
        account: {
            type: 'string',
            title: 'Account'
        }
    },
    type: 'object',
    required: ['account'],
    title: 'UserCreate',
    description: `用於創建 User 記錄的 schema，繼承 UserBase。
包含用戶提交的所有必要字段。`
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;