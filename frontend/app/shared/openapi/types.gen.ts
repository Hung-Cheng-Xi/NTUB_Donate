// This file is auto-generated by @hey-api/openapi-ts

/**
 * 用於創建 Address 記錄的 schema，
 * 包含地址需要提交的所有字段。
 */
export type AddressData = {
  address: string;
};

export type Announcement = {
  id?: number;
  date: string;
  title: string;
  description: string;
  is_show: boolean;
  /**
   * S3 圖片的 URL 或相對路徑
   */
  image_url?: string | null;
  unit_id?: number | null;
};

/**
 * 用於創建 Announcement 記錄的 schema，
 * 包含公告需要提交的所有字段。
 */
export type AnnouncementCreate = {
  date: string;
  title: string;
  description: string;
  is_show: boolean;
  image_url?: string | null;
  unit_id: number;
};

/**
 * 用於返回 New 的基本信息，
 * 適用於讀取操作。
 */
export type AnnouncementInfo = {
  date: string;
  title: string;
  description: string;
  is_show: boolean;
  image_url?: string | null;
  id: number;
  unit: UnitInfo;
};

/**
 * 用於更新 Announcement 記錄的 schema，
 * 允許公告更新。
 */
export type AnnouncementUpdate = {
  date: string;
  title: string;
  description: string;
  is_show: boolean;
  image_url?: string | null;
  id: number;
  unit_id: number;
};

export type AuthRequest = {
  code: string;
};

export type AuthResponse = {
  access_token: string;
};

/**
 * 用於創建 BarCode 記錄的 schema，
 * 包含 BarCode 需要提交的所有字段。
 */
export type BarCodeData = {
  Group: string;
  SerialNumber: string;
  Time: string;
  Money: string;
};

export type Donation = {
  id?: number;
  username: string;
  user_birthday: string;
  id_card: string;
  phone_number: string;
  email: string;
  /**
   * 捐款者身分
   */
  identity?: DonorType;
  year?: string | null;
  gept?: string | null;
  res_address: string;
  registered_address: string;
  /**
   * 公開狀態
   */
  public_status?: PubicStatus;
  memo?: string | null;
  amount: number;
  account: string;
  /**
   * 捐款方式
   */
  type?: DonationType;
  transaction_id?: string | null;
  input_date?: string | null;
  purpose_id?: number;
};

export type DonationPurpose = {
  id?: number;
  title: string;
  lump_sum: number;
  description: string;
  memo?: string | null;
  is_show: boolean;
  /**
   * S3 圖片的 URL 或相對路徑
   */
  image_url?: string | null;
  unit_id?: number;
};

/**
 * 用於創建 DonationPurpose 紀錄的 schema。
 * 包含捐款目的提交的所有必要字段。
 */
export type DonationPurposeCreate = {
  title: string;
  lump_sum: number;
  description: string;
  memo?: string | null;
  is_show: boolean;
  image_url?: string | null;
  unit_id: number;
};

/**
 * 用於返回 Donation 的子模型，
 * 適用於讀取操作。
 */
export type DonationPurposeInfo = {
  title: string;
  description: string;
};

/**
 * 用於更新 DonationPurpose 的 schema，
 * 允許捐款目的更新。
 */
export type DonationPurposeUpdate = {
  title: string;
  lump_sum: number;
  description: string;
  memo?: string | null;
  is_show: boolean;
  image_url?: string | null;
  unit_id: number;
};

/**
 * 表示捐款方式的 Enum。
 *
 * STORE: 使用實體店支付。
 * BANK: 使用銀行支付。
 */
export type DonationType = '實體店支付' | '銀行支付';

/**
 * 表示捐款方式的 Enum。
 *
 * STORE: 使用實體店支付。
 * BANK: 使用銀行支付。
 */
export const DonationType = {
  實體店支付: '實體店支付',
  銀行支付: '銀行支付',
} as const;

/**
 * 用於更新 Donation 的 schema，
 * 允許捐款更新。
 */
export type DonationUpdate = {
  username: string;
  user_birthday: string;
  id_card: string;
  phone_number: string;
  email: string;
  identity?: DonorType;
  year?: string | null;
  gept?: string | null;
  res_address: string;
  registered_address: string;
  public_status?: PubicStatus;
  memo?: string | null;
  amount: number;
  account: string;
  type?: DonationType;
  transaction_id?: string | null;
  input_date?: string | null;
  purpose_id: number;
};

/**
 * 用於創建 Donations 記錄的 schema，
 * 包含用戶需要提交的所有字段。
 */
export type DonationsCreate = {
  username: string;
  user_birthday: string;
  id_card: string;
  phone_number: string;
  email: string;
  identity?: DonorType;
  year?: string | null;
  gept?: string | null;
  res_address: string;
  registered_address: string;
  public_status?: PubicStatus;
  memo?: string | null;
  amount: number;
  account: string;
  type?: DonationType;
  transaction_id?: string | null;
  input_date?: string | null;
  purpose_id: number;
};

/**
 * 表示捐款者身份的 Enum。
 *
 * ALUMNI: 校友
 * STAFF: 教職員
 * PARENT: 家長
 * COMMUNITY: 社區成員
 * CORPORATION: 公司
 * OTHER: 其他
 */
export type DonorType =
  | '校友'
  | '教職員'
  | '家長'
  | '社區成員'
  | '公司'
  | '其他';

/**
 * 表示捐款者身份的 Enum。
 *
 * ALUMNI: 校友
 * STAFF: 教職員
 * PARENT: 家長
 * COMMUNITY: 社區成員
 * CORPORATION: 公司
 * OTHER: 其他
 */
export const DonorType = {
  校友: '校友',
  教職員: '教職員',
  家長: '家長',
  社區成員: '社區成員',
  公司: '公司',
  其他: '其他',
} as const;

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

/**
 * 用於返回分頁的 New 的基本信息，
 * 適用於讀取操作，可返回總筆數。
 */
export type PaginatedAnnouncementInfoResponse = {
  total_count: number;
  items: Array<AnnouncementInfo>;
};

/**
 * 用於返回分頁的 Regulation 的基本信息，
 * 適用於讀取操作，可返回總筆數。
 */
export type PaginatedRegulationInfoResponse = {
  total_count: number;
  items: Array<RegulationInfo>;
};

/**
 * 表示公開狀態的 Enum。
 *
 * PUBLIC: 公開
 * ANONYMOUS: 匿名
 * PARTIALLY: 匿名但受捐單位知曉
 */
export type PubicStatus = '公開' | '匿名' | '匿名但受捐單位知曉';

/**
 * 表示公開狀態的 Enum。
 *
 * PUBLIC: 公開
 * ANONYMOUS: 匿名
 * PARTIALLY: 匿名但受捐單位知曉
 */
export const PubicStatus = {
  公開: '公開',
  匿名: '匿名',
  匿名但受捐單位知曉: '匿名但受捐單位知曉',
} as const;

export type Regulation = {
  id?: number;
  title: string;
  /**
   * 相關法規類別
   */
  category?: RegulationCategory;
  description_link: string;
  is_show: boolean;
};

/**
 * 表示相關法規方式的 Enum。
 *
 * ALL: 全部
 * DEPARTMENT_LAWS: 各部法規
 * COMMERCIAL_LAW: 北商大法規
 * TAX_RELATED_LAWS: 相關稅法
 * DONATION_FORMS_DOWNLOAD: 捐款相關表單下載
 */
export type RegulationCategory =
  | 'ALL'
  | 'DEPARTMENT_LAWS'
  | 'COMMERCIAL_LAW'
  | 'TAX_RELATED_LAWS'
  | 'DONATION_FORMS_DOWNLOAD';

/**
 * 表示相關法規方式的 Enum。
 *
 * ALL: 全部
 * DEPARTMENT_LAWS: 各部法規
 * COMMERCIAL_LAW: 北商大法規
 * TAX_RELATED_LAWS: 相關稅法
 * DONATION_FORMS_DOWNLOAD: 捐款相關表單下載
 */
export const RegulationCategory = {
  ALL: 'ALL',
  DEPARTMENT_LAWS: 'DEPARTMENT_LAWS',
  COMMERCIAL_LAW: 'COMMERCIAL_LAW',
  TAX_RELATED_LAWS: 'TAX_RELATED_LAWS',
  DONATION_FORMS_DOWNLOAD: 'DONATION_FORMS_DOWNLOAD',
} as const;

/**
 * 用於創建 Regulationt 記錄的 schema，
 * 包含用戶提交的所有必要字段。
 */
export type RegulationCreate = {
  title: string;
  category?: RegulationCategory;
  description_link: string;
  is_show: boolean;
};

/**
 * 用於返回 Regulation 的基本信息，
 * 適用於讀取操作。
 */
export type RegulationInfo = {
  title: string;
  category?: RegulationCategory;
  description_link: string;
  is_show: boolean;
  id: number;
};

/**
 * 用於更新 Regulationt 記錄的 schema，
 * 允許法規更新。
 */
export type RegulationtUpdate = {
  title: string;
  category?: RegulationCategory;
  description_link: string;
  is_show: boolean;
};

export type Unit = {
  id?: number;
  name: string;
};

/**
 * 用於創建 Unit 記錄的 schema，
 * 包含單位提交的所有必要字段。
 */
export type UnitCreate = {
  name: string;
};

/**
 * 用於返回 Unit 的基本信息，適用於讀取操作。
 */
export type UnitInfo = {
  name: string;
  id: number;
};

/**
 * 用於更新 Unit 記錄的 schema，
 * 允許單位更新。
 */
export type UnitUpdate = {
  name: string;
};

export type User = {
  id?: number;
  account: string;
};

/**
 * 用於創建 User 記錄的 schema，
 * 包含用戶提交的所有必要字段。
 */
export type UserCreate = {
  account: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

/**
 * 用於返回 Donations 的基本信息，
 * 適用於讀取操作。
 */
export type app__application__admin__schemas__donation__DonationInfo = {
  username: string;
  user_birthday: string;
  id_card: string;
  phone_number: string;
  email: string;
  identity?: DonorType;
  year?: string | null;
  gept?: string | null;
  res_address: string;
  registered_address: string;
  public_status?: PubicStatus;
  memo?: string | null;
  amount: number;
  account: string;
  type?: DonationType;
  status?: number | null;
  transaction_id?: string | null;
  input_date?: string | null;
  id: number;
  purpose_id: number;
};

/**
 * 用於返回分頁的 Donation 的基本信息，
 * 適用於讀取操作，可返回總筆數。
 */
export type app__application__admin__schemas__donation__PaginatedDonationInfoResponse =
  {
    total_count: number;
    items: Array<app__application__admin__schemas__donation__DonationInfo>;
  };

/**
 * 用於返回 DonationPurpose 的基本信息，適用於讀取操作。
 */
export type app__application__admin__schemas__donation_purpose__DonationPurposeItem =
  {
    title: string;
    lump_sum: number;
    description: string;
    memo?: string | null;
    is_show: boolean;
    image_url?: string | null;
    id: number;
  };

/**
 * 用於返回分頁的 DonationPurpose 的基本信息，
 * 適用於讀取操作，可返回總筆數。
 */
export type app__application__admin__schemas__donation_purpose__PaginatedDonationPurposeInfoResponse =
  {
    total_count: number;
    items: Array<app__application__admin__schemas__donation_purpose__DonationPurposeItem>;
  };

/**
 * 用於返回 Donations 的基本信息，
 * 適用於讀取操作。
 */
export type app__application__client__schemas__donation__DonationInfo = {
  username: string;
  amount: number;
  input_date?: string | null;
  purpose: DonationPurposeInfo;
};

/**
 * 用於返回分頁的 Donation 的基本信息，
 * 適用於讀取操作，可返回總筆數。
 */
export type app__application__client__schemas__donation__PaginatedDonationInfoResponse =
  {
    total_count: number;
    items: Array<app__application__client__schemas__donation__DonationInfo>;
  };

/**
 * 用於返回 DonationPurpose 的基本信息，適用於讀取操作。
 */
export type app__application__client__schemas__donation_purpose__DonationPurposeItem =
  {
    title: string;
    lump_sum: number;
    description: string;
    memo?: string | null;
    is_show: boolean;
    image_url?: string | null;
    total_donation: number;
    achieved_percentage: number;
    id: number;
  };

/**
 * 用於返回分頁的 DonationPurpose 的基本信息，
 * 適用於讀取操作，可返回總筆數。
 */
export type app__application__client__schemas__donation_purpose__PaginatedDonationPurposeInfoResponse =
  {
    total_count: number;
    items: Array<app__application__client__schemas__donation_purpose__DonationPurposeItem>;
  };

export type ClientGetDonationsData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type ClientGetDonationsResponse =
  app__application__client__schemas__donation__PaginatedDonationInfoResponse;

export type ClientGetDonationsError = HTTPValidationError;

export type ClientCreateDonationData = {
  body: DonationsCreate;
};

export type ClientCreateDonationResponse = Donation;

export type ClientCreateDonationError = HTTPValidationError;

export type ClientGetDonationPurposesData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type ClientGetDonationPurposesResponse =
  app__application__client__schemas__donation_purpose__PaginatedDonationPurposeInfoResponse;

export type ClientGetDonationPurposesError = HTTPValidationError;

export type ClientGetDonationPurposeData = {
  path: {
    donation_purpose_id: number;
  };
};

export type ClientGetDonationPurposeResponse = DonationPurpose;

export type ClientGetDonationPurposeError = HTTPValidationError;

export type ClientGetAnnouncementsData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type ClientGetAnnouncementsResponse = Array<AnnouncementInfo>;

export type ClientGetAnnouncementsError = HTTPValidationError;

export type ClientGetAnnouncementData = {
  path: {
    announcement_id: number;
  };
};

export type ClientGetAnnouncementResponse = Announcement;

export type ClientGetAnnouncementError = HTTPValidationError;

export type ClientGetRegulationsData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type ClientGetRegulationsResponse = PaginatedRegulationInfoResponse;

export type ClientGetRegulationsError = HTTPValidationError;

export type ClientGetRegulationData = {
  path: {
    regulation_id: number;
  };
};

export type ClientGetRegulationResponse = Regulation;

export type ClientGetRegulationError = HTTPValidationError;

export type ClientGenerateBarcodeData = {
  body: BarCodeData;
};

export type ClientGenerateBarcodeResponse = Array<string>;

export type ClientGenerateBarcodeError = HTTPValidationError;

export type ClientGetZipcodeData = {
  body: AddressData;
};

export type ClientGetZipcodeResponse = {
  [key: string]: unknown;
};

export type ClientGetZipcodeError = HTTPValidationError;

export type AdminLoginData = {
  body: AuthRequest;
};

export type AdminLoginResponse = unknown;

export type AdminLoginError = HTTPValidationError;

export type AdminRefreshResponse = AuthResponse;

export type AdminRefreshError = unknown;

export type AdminExcelExportData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type AdminExcelExportResponse = {
  [key: string]: unknown;
};

export type AdminExcelExportError = HTTPValidationError;

export type AdminRefreshFtpDataResponse = unknown;

export type AdminRefreshFtpDataError = unknown;

export type AdminListFilesResponse = unknown;

export type AdminListFilesError = unknown;

export type AdminGetRegulationsData = {
  query?: {
    limit?: number;
    search?: string;
    skip?: number;
  };
};

export type AdminGetRegulationsResponse = PaginatedRegulationInfoResponse;

export type AdminGetRegulationsError = HTTPValidationError;

export type AdminCreateRegulationData = {
  body: RegulationCreate;
};

export type AdminCreateRegulationResponse = Regulation;

export type AdminCreateRegulationError = HTTPValidationError;

export type AdminGetRegulationData = {
  path: {
    regulation_id: number;
  };
};

export type AdminGetRegulationResponse = Regulation;

export type AdminGetRegulationError = HTTPValidationError;

export type AdminUpdateRegulationData = {
  body: RegulationtUpdate;
  path: {
    regulation_id: number;
  };
};

export type AdminUpdateRegulationResponse = Regulation;

export type AdminUpdateRegulationError = HTTPValidationError;

export type AdminDeleteRegulationData = {
  path: {
    regulation_id: number;
  };
};

export type AdminDeleteRegulationResponse = Regulation;

export type AdminDeleteRegulationError = HTTPValidationError;

export type AdminGetDonationPurposesData = {
  query?: {
    limit?: number;
    search?: string;
    skip?: number;
  };
};

export type AdminGetDonationPurposesResponse =
  app__application__admin__schemas__donation_purpose__PaginatedDonationPurposeInfoResponse;

export type AdminGetDonationPurposesError = HTTPValidationError;

export type AdminCreateDonationPurposeData = {
  body: DonationPurposeCreate;
};

export type AdminCreateDonationPurposeResponse = DonationPurpose;

export type AdminCreateDonationPurposeError = HTTPValidationError;

export type AdminGetDonationPurposeData = {
  path: {
    donation_purpose_id: number;
  };
};

export type AdminGetDonationPurposeResponse = DonationPurpose;

export type AdminGetDonationPurposeError = HTTPValidationError;

export type AdminUpdateDonationPurposeData = {
  body: DonationPurposeUpdate;
  path: {
    donation_purpose_id: number;
  };
};

export type AdminUpdateDonationPurposeResponse = DonationPurpose;

export type AdminUpdateDonationPurposeError = HTTPValidationError;

export type AdminDeleteDonationPurposeData = {
  path: {
    donation_purpose_id: number;
  };
};

export type AdminDeleteDonationPurposeResponse = DonationPurpose;

export type AdminDeleteDonationPurposeError = HTTPValidationError;

export type AdminGetDonationsData = {
  query?: {
    limit?: number;
    search?: string;
    skip?: number;
  };
};

export type AdminGetDonationsResponse =
  app__application__admin__schemas__donation__PaginatedDonationInfoResponse;

export type AdminGetDonationsError = HTTPValidationError;

export type AdminCreateDonationData = {
  body: DonationsCreate;
};

export type AdminCreateDonationResponse = Donation;

export type AdminCreateDonationError = HTTPValidationError;

export type AdminGetDonationData = {
  path: {
    donation_id: number;
  };
};

export type AdminGetDonationResponse = Donation;

export type AdminGetDonationError = HTTPValidationError;

export type AdminUpdateDonationData = {
  body: DonationUpdate;
  path: {
    donation_id: number;
  };
};

export type AdminUpdateDonationResponse = Donation;

export type AdminUpdateDonationError = HTTPValidationError;

export type AdminDeleteDonationData = {
  path: {
    donation_id: number;
  };
};

export type AdminDeleteDonationResponse = Donation;

export type AdminDeleteDonationError = HTTPValidationError;

export type AdminGetAnnouncementsData = {
  query?: {
    limit?: number;
    search?: string;
    skip?: number;
  };
};

export type AdminGetAnnouncementsResponse = PaginatedAnnouncementInfoResponse;

export type AdminGetAnnouncementsError = HTTPValidationError;

export type AdminCreateAnnouncementData = {
  body: AnnouncementCreate;
};

export type AdminCreateAnnouncementResponse = Announcement;

export type AdminCreateAnnouncementError = HTTPValidationError;

export type AdminGetAnnouncementData = {
  path: {
    announcement_id: number;
  };
};

export type AdminGetAnnouncementResponse = Announcement;

export type AdminGetAnnouncementError = HTTPValidationError;

export type AdminUpdateAnnouncementData = {
  body: AnnouncementUpdate;
  path: {
    announcement_id: number;
  };
};

export type AdminUpdateAnnouncementResponse = Announcement;

export type AdminUpdateAnnouncementError = HTTPValidationError;

export type AdminDeleteAnnouncementData = {
  path: {
    announcement_id: number;
  };
};

export type AdminDeleteAnnouncementResponse = Announcement;

export type AdminDeleteAnnouncementError = HTTPValidationError;

export type AdminGetUnitsResponse = Array<Unit>;

export type AdminGetUnitsError = unknown;

export type AdminCreateUnitData = {
  body: UnitCreate;
};

export type AdminCreateUnitResponse = Unit;

export type AdminCreateUnitError = HTTPValidationError;

export type AdminGetUnitData = {
  path: {
    unit_id: number;
  };
};

export type AdminGetUnitResponse = Unit;

export type AdminGetUnitError = HTTPValidationError;

export type AdminUpdateUnitData = {
  body: UnitUpdate;
  path: {
    unit_id: number;
  };
};

export type AdminUpdateUnitResponse = Unit;

export type AdminUpdateUnitError = HTTPValidationError;

export type AdminDeleteUnitData = {
  path: {
    unit_id: number;
  };
};

export type AdminDeleteUnitResponse = Unit;

export type AdminDeleteUnitError = HTTPValidationError;

export type AdminGetUsersResponse = Array<User>;

export type AdminGetUsersError = unknown;

export type AdminCreateUserData = {
  body: UserCreate;
};

export type AdminCreateUserResponse = User;

export type AdminCreateUserError = HTTPValidationError;

export type AdminGetUserData = {
  path: {
    user_id: number;
  };
};

export type AdminGetUserResponse = User;

export type AdminGetUserError = HTTPValidationError;

export type AdminUpdateUserData = {
  body: UserCreate;
  path: {
    user_id: number;
  };
};

export type AdminUpdateUserResponse = User;

export type AdminUpdateUserError = HTTPValidationError;

export type AdminDeleteUserData = {
  path: {
    user_id: number;
  };
};

export type AdminDeleteUserResponse = User;

export type AdminDeleteUserError = HTTPValidationError;
