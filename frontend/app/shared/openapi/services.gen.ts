// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from '@hey-api/client-axios';
import type {
  ClientGetDonationsData,
  ClientGetDonationsError,
  ClientGetDonationsResponse,
  ClientCreateDonationData,
  ClientCreateDonationError,
  ClientCreateDonationResponse,
  ClientGetDonationPurposesData,
  ClientGetDonationPurposesError,
  ClientGetDonationPurposesResponse,
  ClientGetDonationPurposeData,
  ClientGetDonationPurposeError,
  ClientGetDonationPurposeResponse,
  ClientGetAnnouncementsData,
  ClientGetAnnouncementsError,
  ClientGetAnnouncementsResponse,
  ClientGetAnnouncementData,
  ClientGetAnnouncementError,
  ClientGetAnnouncementResponse,
  ClientGetRegulationsData,
  ClientGetRegulationsError,
  ClientGetRegulationsResponse,
  ClientGetRegulationData,
  ClientGetRegulationError,
  ClientGetRegulationResponse,
  ClientGenerateBarcodeData,
  ClientGenerateBarcodeError,
  ClientGenerateBarcodeResponse,
  ClientGetZipcodeData,
  ClientGetZipcodeError,
  ClientGetZipcodeResponse,
  AdminLoginData,
  AdminLoginError,
  AdminLoginResponse,
  AdminRefreshError,
  AdminRefreshResponse,
  AdminExcelExportData,
  AdminExcelExportError,
  AdminExcelExportResponse,
  AdminRefreshFtpDataError,
  AdminRefreshFtpDataResponse,
  AdminListFilesError,
  AdminListFilesResponse,
  AdminGetRegulationsData,
  AdminGetRegulationsError,
  AdminGetRegulationsResponse,
  AdminCreateRegulationData,
  AdminCreateRegulationError,
  AdminCreateRegulationResponse,
  AdminGetRegulationData,
  AdminGetRegulationError,
  AdminGetRegulationResponse,
  AdminUpdateRegulationData,
  AdminUpdateRegulationError,
  AdminUpdateRegulationResponse,
  AdminDeleteRegulationData,
  AdminDeleteRegulationError,
  AdminDeleteRegulationResponse,
  AdminGetDonationPurposesData,
  AdminGetDonationPurposesError,
  AdminGetDonationPurposesResponse,
  AdminCreateDonationPurposeData,
  AdminCreateDonationPurposeError,
  AdminCreateDonationPurposeResponse,
  AdminGetDonationPurposeData,
  AdminGetDonationPurposeError,
  AdminGetDonationPurposeResponse,
  AdminUpdateDonationPurposeData,
  AdminUpdateDonationPurposeError,
  AdminUpdateDonationPurposeResponse,
  AdminDeleteDonationPurposeData,
  AdminDeleteDonationPurposeError,
  AdminDeleteDonationPurposeResponse,
  AdminGetDonationsData,
  AdminGetDonationsError,
  AdminGetDonationsResponse,
  AdminCreateDonationData,
  AdminCreateDonationError,
  AdminCreateDonationResponse,
  AdminGetDonationData,
  AdminGetDonationError,
  AdminGetDonationResponse,
  AdminUpdateDonationData,
  AdminUpdateDonationError,
  AdminUpdateDonationResponse,
  AdminDeleteDonationData,
  AdminDeleteDonationError,
  AdminDeleteDonationResponse,
  AdminGetAnnouncementsData,
  AdminGetAnnouncementsError,
  AdminGetAnnouncementsResponse,
  AdminCreateAnnouncementData,
  AdminCreateAnnouncementError,
  AdminCreateAnnouncementResponse,
  AdminGetAnnouncementData,
  AdminGetAnnouncementError,
  AdminGetAnnouncementResponse,
  AdminUpdateAnnouncementData,
  AdminUpdateAnnouncementError,
  AdminUpdateAnnouncementResponse,
  AdminDeleteAnnouncementData,
  AdminDeleteAnnouncementError,
  AdminDeleteAnnouncementResponse,
  AdminGetUnitsError,
  AdminGetUnitsResponse,
  AdminCreateUnitData,
  AdminCreateUnitError,
  AdminCreateUnitResponse,
  AdminGetUnitData,
  AdminGetUnitError,
  AdminGetUnitResponse,
  AdminUpdateUnitData,
  AdminUpdateUnitError,
  AdminUpdateUnitResponse,
  AdminDeleteUnitData,
  AdminDeleteUnitError,
  AdminDeleteUnitResponse,
  AdminGetUsersError,
  AdminGetUsersResponse,
  AdminCreateUserData,
  AdminCreateUserError,
  AdminCreateUserResponse,
  AdminGetUserData,
  AdminGetUserError,
  AdminGetUserResponse,
  AdminUpdateUserData,
  AdminUpdateUserError,
  AdminUpdateUserResponse,
  AdminDeleteUserData,
  AdminDeleteUserError,
  AdminDeleteUserResponse,
} from './types.gen';

export const client = createClient(createConfig());

/**
 * Client Get Donations
 */
export const clientGetDonations = <ThrowOnError extends boolean = false>(
  options?: Options<ClientGetDonationsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ClientGetDonationsResponse,
    ClientGetDonationsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/donation/',
  });
};

/**
 * Client Create Donation
 */
export const clientCreateDonation = <ThrowOnError extends boolean = false>(
  options: Options<ClientCreateDonationData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ClientCreateDonationResponse,
    ClientCreateDonationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/donation/',
  });
};

/**
 * Client Get Donation Purposes
 */
export const clientGetDonationPurposes = <ThrowOnError extends boolean = false>(
  options?: Options<ClientGetDonationPurposesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ClientGetDonationPurposesResponse,
    ClientGetDonationPurposesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/donation_purpose/',
  });
};

/**
 * Client Get Donation Purpose
 */
export const clientGetDonationPurpose = <ThrowOnError extends boolean = false>(
  options: Options<ClientGetDonationPurposeData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ClientGetDonationPurposeResponse,
    ClientGetDonationPurposeError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/donation_purpose/{donation_purpose_id}',
  });
};

/**
 * Client Get Announcements
 */
export const clientGetAnnouncements = <ThrowOnError extends boolean = false>(
  options?: Options<ClientGetAnnouncementsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ClientGetAnnouncementsResponse,
    ClientGetAnnouncementsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/announcement/',
  });
};

/**
 * Client Get Announcement
 */
export const clientGetAnnouncement = <ThrowOnError extends boolean = false>(
  options: Options<ClientGetAnnouncementData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ClientGetAnnouncementResponse,
    ClientGetAnnouncementError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/announcement/{announcement_id}',
  });
};

/**
 * Client Get Regulations
 */
export const clientGetRegulations = <ThrowOnError extends boolean = false>(
  options?: Options<ClientGetRegulationsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ClientGetRegulationsResponse,
    ClientGetRegulationsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/regulation/',
  });
};

/**
 * Client Get Regulation
 */
export const clientGetRegulation = <ThrowOnError extends boolean = false>(
  options: Options<ClientGetRegulationData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ClientGetRegulationResponse,
    ClientGetRegulationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/regulation/{regulation_id}',
  });
};

/**
 * Client Generate Barcode
 */
export const clientGenerateBarcode = <ThrowOnError extends boolean = false>(
  options: Options<ClientGenerateBarcodeData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ClientGenerateBarcodeResponse,
    ClientGenerateBarcodeError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/barcode/generate-barcode/',
  });
};

/**
 * Client Get Zipcode
 */
export const clientGetZipcode = <ThrowOnError extends boolean = false>(
  options: Options<ClientGetZipcodeData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ClientGetZipcodeResponse,
    ClientGetZipcodeError,
    ThrowOnError
  >({
    ...options,
    url: '/api/client/address/get_zipcode/',
  });
};

/**
 * Admin Login
 */
export const adminLogin = <ThrowOnError extends boolean = false>(
  options: Options<AdminLoginData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminLoginResponse,
    AdminLoginError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/auth/login/',
  });
};

/**
 * Admin Refresh
 */
export const adminRefresh = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminRefreshResponse,
    AdminRefreshError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/auth/refresh/',
  });
};

/**
 * Admin Excel Export
 */
export const adminExcelExport = <ThrowOnError extends boolean = false>(
  options?: Options<AdminExcelExportData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminExcelExportResponse,
    AdminExcelExportError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/excel/export/',
  });
};

/**
 * Admin Refresh Ftp Data
 */
export const adminRefreshFtpData = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminRefreshFtpDataResponse,
    AdminRefreshFtpDataError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/ftp/refresh-data',
  });
};

/**
 * Admin List Files
 */
export const adminListFiles = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminListFilesResponse,
    AdminListFilesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/ftp/list-files',
  });
};

/**
 * Admin Get Regulations
 */
export const adminGetRegulations = <ThrowOnError extends boolean = false>(
  options?: Options<AdminGetRegulationsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetRegulationsResponse,
    AdminGetRegulationsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/regulation/',
  });
};

/**
 * Admin Create Regulation
 */
export const adminCreateRegulation = <ThrowOnError extends boolean = false>(
  options: Options<AdminCreateRegulationData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminCreateRegulationResponse,
    AdminCreateRegulationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/regulation/',
  });
};

/**
 * Admin Get Regulation
 */
export const adminGetRegulation = <ThrowOnError extends boolean = false>(
  options: Options<AdminGetRegulationData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetRegulationResponse,
    AdminGetRegulationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/regulation/{regulation_id}',
  });
};

/**
 * Admin Update Regulation
 */
export const adminUpdateRegulation = <ThrowOnError extends boolean = false>(
  options: Options<AdminUpdateRegulationData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    AdminUpdateRegulationResponse,
    AdminUpdateRegulationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/regulation/{regulation_id}',
  });
};

/**
 * Admin Delete Regulation
 */
export const adminDeleteRegulation = <ThrowOnError extends boolean = false>(
  options: Options<AdminDeleteRegulationData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    AdminDeleteRegulationResponse,
    AdminDeleteRegulationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/regulation/{regulation_id}',
  });
};

/**
 * Admin Get Donation Purposes
 */
export const adminGetDonationPurposes = <ThrowOnError extends boolean = false>(
  options?: Options<AdminGetDonationPurposesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetDonationPurposesResponse,
    AdminGetDonationPurposesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation-purpose/',
  });
};

/**
 * Admin Create Donation Purpose
 */
export const adminCreateDonationPurpose = <
  ThrowOnError extends boolean = false,
>(
  options: Options<AdminCreateDonationPurposeData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminCreateDonationPurposeResponse,
    AdminCreateDonationPurposeError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation-purpose/',
  });
};

/**
 * Admin Get Donation Purpose
 */
export const adminGetDonationPurpose = <ThrowOnError extends boolean = false>(
  options: Options<AdminGetDonationPurposeData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetDonationPurposeResponse,
    AdminGetDonationPurposeError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation-purpose/{donation_purpose_id}',
  });
};

/**
 * Admin Update Donation Purpose
 */
export const adminUpdateDonationPurpose = <
  ThrowOnError extends boolean = false,
>(
  options: Options<AdminUpdateDonationPurposeData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    AdminUpdateDonationPurposeResponse,
    AdminUpdateDonationPurposeError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation-purpose/{donation_purpose_id}',
  });
};

/**
 * Admin Delete Donation Purpose
 */
export const adminDeleteDonationPurpose = <
  ThrowOnError extends boolean = false,
>(
  options: Options<AdminDeleteDonationPurposeData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    AdminDeleteDonationPurposeResponse,
    AdminDeleteDonationPurposeError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation-purpose/{donation_purpose_id}',
  });
};

/**
 * Admin Get Donations
 */
export const adminGetDonations = <ThrowOnError extends boolean = false>(
  options?: Options<AdminGetDonationsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetDonationsResponse,
    AdminGetDonationsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation/',
  });
};

/**
 * Admin Create Donation
 */
export const adminCreateDonation = <ThrowOnError extends boolean = false>(
  options: Options<AdminCreateDonationData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminCreateDonationResponse,
    AdminCreateDonationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation/',
  });
};

/**
 * Admin Get Donation
 */
export const adminGetDonation = <ThrowOnError extends boolean = false>(
  options: Options<AdminGetDonationData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetDonationResponse,
    AdminGetDonationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation/{donation_id}',
  });
};

/**
 * Admin Update Donation
 */
export const adminUpdateDonation = <ThrowOnError extends boolean = false>(
  options: Options<AdminUpdateDonationData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    AdminUpdateDonationResponse,
    AdminUpdateDonationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation/{donation_id}',
  });
};

/**
 * Admin Delete Donation
 */
export const adminDeleteDonation = <ThrowOnError extends boolean = false>(
  options: Options<AdminDeleteDonationData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    AdminDeleteDonationResponse,
    AdminDeleteDonationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/donation/{donation_id}',
  });
};

/**
 * Admin Get Announcements
 */
export const adminGetAnnouncements = <ThrowOnError extends boolean = false>(
  options?: Options<AdminGetAnnouncementsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetAnnouncementsResponse,
    AdminGetAnnouncementsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/announcement/',
  });
};

/**
 * Admin Create Announcement
 */
export const adminCreateAnnouncement = <ThrowOnError extends boolean = false>(
  options: Options<AdminCreateAnnouncementData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminCreateAnnouncementResponse,
    AdminCreateAnnouncementError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/announcement/',
  });
};

/**
 * Admin Get Announcement
 */
export const adminGetAnnouncement = <ThrowOnError extends boolean = false>(
  options: Options<AdminGetAnnouncementData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetAnnouncementResponse,
    AdminGetAnnouncementError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/announcement/{announcement_id}',
  });
};

/**
 * Admin Update Announcement
 */
export const adminUpdateAnnouncement = <ThrowOnError extends boolean = false>(
  options: Options<AdminUpdateAnnouncementData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    AdminUpdateAnnouncementResponse,
    AdminUpdateAnnouncementError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/announcement/{announcement_id}',
  });
};

/**
 * Admin Delete Announcement
 */
export const adminDeleteAnnouncement = <ThrowOnError extends boolean = false>(
  options: Options<AdminDeleteAnnouncementData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    AdminDeleteAnnouncementResponse,
    AdminDeleteAnnouncementError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/announcement/{announcement_id}',
  });
};

/**
 * Admin Get Units
 */
export const adminGetUnits = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetUnitsResponse,
    AdminGetUnitsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/unit/',
  });
};

/**
 * Admin Create Unit
 */
export const adminCreateUnit = <ThrowOnError extends boolean = false>(
  options: Options<AdminCreateUnitData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminCreateUnitResponse,
    AdminCreateUnitError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/unit/',
  });
};

/**
 * Admin Get Unit
 */
export const adminGetUnit = <ThrowOnError extends boolean = false>(
  options: Options<AdminGetUnitData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetUnitResponse,
    AdminGetUnitError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/unit/{unit_id}',
  });
};

/**
 * Admin Update Unit
 */
export const adminUpdateUnit = <ThrowOnError extends boolean = false>(
  options: Options<AdminUpdateUnitData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    AdminUpdateUnitResponse,
    AdminUpdateUnitError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/unit/{unit_id}',
  });
};

/**
 * Admin Delete Unit
 */
export const adminDeleteUnit = <ThrowOnError extends boolean = false>(
  options: Options<AdminDeleteUnitData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    AdminDeleteUnitResponse,
    AdminDeleteUnitError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/unit/{unit_id}',
  });
};

/**
 * Admin Get Users
 */
export const adminGetUsers = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetUsersResponse,
    AdminGetUsersError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/user/',
  });
};

/**
 * Admin Create User
 */
export const adminCreateUser = <ThrowOnError extends boolean = false>(
  options: Options<AdminCreateUserData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AdminCreateUserResponse,
    AdminCreateUserError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/user/',
  });
};

/**
 * Admin Get User
 */
export const adminGetUser = <ThrowOnError extends boolean = false>(
  options: Options<AdminGetUserData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AdminGetUserResponse,
    AdminGetUserError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/user/{user_id}',
  });
};

/**
 * Admin Update User
 */
export const adminUpdateUser = <ThrowOnError extends boolean = false>(
  options: Options<AdminUpdateUserData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    AdminUpdateUserResponse,
    AdminUpdateUserError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/user/{user_id}',
  });
};

/**
 * Admin Delete User
 */
export const adminDeleteUser = <ThrowOnError extends boolean = false>(
  options: Options<AdminDeleteUserData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    AdminDeleteUserResponse,
    AdminDeleteUserError,
    ThrowOnError
  >({
    ...options,
    url: '/api/admin/user/{user_id}',
  });
};
