// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { GetUsersError, GetUsersResponse, CreateUserData, CreateUserError, CreateUserResponse, GetUserData, GetUserError, GetUserResponse, UpdateUserData, UpdateUserError, UpdateUserResponse, DeleteUserData, DeleteUserError, DeleteUserResponse, GetDonationsError, GetDonationsResponse, CreateDonationData, CreateDonationError, CreateDonationResponse, GetDonationData, GetDonationError, GetDonationResponse, UpdateDonationData, UpdateDonationError, UpdateDonationResponse, PatchDonationData, PatchDonationError, PatchDonationResponse, DeleteDonationData, DeleteDonationError, DeleteDonationResponse, GetDonationPurposesError, GetDonationPurposesResponse, CreateDonationPurposeData, CreateDonationPurposeError, CreateDonationPurposeResponse, GetItemsData, GetItemsError, GetItemsResponse, GetDonationPurposeData, GetDonationPurposeError, GetDonationPurposeResponse, UpdateDonationPurposeData, UpdateDonationPurposeError, UpdateDonationPurposeResponse, PatchDonationPurposeData, PatchDonationPurposeError, PatchDonationPurposeResponse, DeleteDonationPurposeData, DeleteDonationPurposeError, DeleteDonationPurposeResponse, GetUnitsError, GetUnitsResponse, CreateUnitData, CreateUnitError, CreateUnitResponse, GetUnitData, GetUnitError, GetUnitResponse, UpdateUnitData, UpdateUnitError, UpdateUnitResponse, DeleteUnitData, DeleteUnitError, DeleteUnitResponse, GetAllNewsError, GetAllNewsResponse, CreateNewsData, CreateNewsError, CreateNewsResponse, GetNewsData, GetNewsError, GetNewsResponse, UpdateNewsData, UpdateNewsError, UpdateNewsResponse, PatchNewsData, PatchNewsError, PatchNewsResponse, DeleteNewsData, DeleteNewsError, DeleteNewsResponse, GenerateBarcodeData, GenerateBarcodeError, GenerateBarcodeResponse, GetZipcodeData, GetZipcodeError, GetZipcodeResponse, TestError, TestResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Get Users
 */
export const getUsers = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetUsersResponse, GetUsersError, ThrowOnError>({
    ...options,
    url: '/api/client/user/'
}); };

/**
 * Create User
 */
export const createUser = <ThrowOnError extends boolean = false>(options: Options<CreateUserData, ThrowOnError>) => { return (options?.client ?? client).post<CreateUserResponse, CreateUserError, ThrowOnError>({
    ...options,
    url: '/api/client/user/'
}); };

/**
 * Get User
 */
export const getUser = <ThrowOnError extends boolean = false>(options: Options<GetUserData, ThrowOnError>) => { return (options?.client ?? client).get<GetUserResponse, GetUserError, ThrowOnError>({
    ...options,
    url: '/api/client/user/{user_id}'
}); };

/**
 * Update User
 */
export const updateUser = <ThrowOnError extends boolean = false>(options: Options<UpdateUserData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateUserResponse, UpdateUserError, ThrowOnError>({
    ...options,
    url: '/api/client/user/{user_id}'
}); };

/**
 * Delete User
 */
export const deleteUser = <ThrowOnError extends boolean = false>(options: Options<DeleteUserData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteUserResponse, DeleteUserError, ThrowOnError>({
    ...options,
    url: '/api/client/user/{user_id}'
}); };

/**
 * Get Donations
 */
export const getDonations = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationsResponse, GetDonationsError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/'
}); };

/**
 * Create Donation
 */
export const createDonation = <ThrowOnError extends boolean = false>(options: Options<CreateDonationData, ThrowOnError>) => { return (options?.client ?? client).post<CreateDonationResponse, CreateDonationError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/'
}); };

/**
 * Get Donation
 */
export const getDonation = <ThrowOnError extends boolean = false>(options: Options<GetDonationData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationResponse, GetDonationError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/{donation_id}'
}); };

/**
 * Update Donation
 */
export const updateDonation = <ThrowOnError extends boolean = false>(options: Options<UpdateDonationData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateDonationResponse, UpdateDonationError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/{donation_id}'
}); };

/**
 * Patch Donation
 */
export const patchDonation = <ThrowOnError extends boolean = false>(options: Options<PatchDonationData, ThrowOnError>) => { return (options?.client ?? client).patch<PatchDonationResponse, PatchDonationError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/{donation_id}'
}); };

/**
 * Delete Donation
 */
export const deleteDonation = <ThrowOnError extends boolean = false>(options: Options<DeleteDonationData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteDonationResponse, DeleteDonationError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/{donation_id}'
}); };

/**
 * Get Donation Purposes
 */
export const getDonationPurposes = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationPurposesResponse, GetDonationPurposesError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/'
}); };

/**
 * Create Donation Purpose
 */
export const createDonationPurpose = <ThrowOnError extends boolean = false>(options: Options<CreateDonationPurposeData, ThrowOnError>) => { return (options?.client ?? client).post<CreateDonationPurposeResponse, CreateDonationPurposeError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/'
}); };

/**
 * Get Items
 */
export const getItems = <ThrowOnError extends boolean = false>(options?: Options<GetItemsData, ThrowOnError>) => { return (options?.client ?? client).get<GetItemsResponse, GetItemsError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/items'
}); };

/**
 * Get Donation Purpose
 */
export const getDonationPurpose = <ThrowOnError extends boolean = false>(options: Options<GetDonationPurposeData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationPurposeResponse, GetDonationPurposeError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/{donation_purpose_id}'
}); };

/**
 * Update Donation Purpose
 */
export const updateDonationPurpose = <ThrowOnError extends boolean = false>(options: Options<UpdateDonationPurposeData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateDonationPurposeResponse, UpdateDonationPurposeError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/{donation_purpose_id}'
}); };

/**
 * Patch Donation Purpose
 */
export const patchDonationPurpose = <ThrowOnError extends boolean = false>(options: Options<PatchDonationPurposeData, ThrowOnError>) => { return (options?.client ?? client).patch<PatchDonationPurposeResponse, PatchDonationPurposeError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/{donation_purpose_id}'
}); };

/**
 * Delete Donation Purpose
 */
export const deleteDonationPurpose = <ThrowOnError extends boolean = false>(options: Options<DeleteDonationPurposeData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteDonationPurposeResponse, DeleteDonationPurposeError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/{donation_purpose_id}'
}); };

/**
 * Get Units
 */
export const getUnits = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetUnitsResponse, GetUnitsError, ThrowOnError>({
    ...options,
    url: '/api/client/unit/'
}); };

/**
 * Create Unit
 */
export const createUnit = <ThrowOnError extends boolean = false>(options: Options<CreateUnitData, ThrowOnError>) => { return (options?.client ?? client).post<CreateUnitResponse, CreateUnitError, ThrowOnError>({
    ...options,
    url: '/api/client/unit/'
}); };

/**
 * Get Unit
 */
export const getUnit = <ThrowOnError extends boolean = false>(options: Options<GetUnitData, ThrowOnError>) => { return (options?.client ?? client).get<GetUnitResponse, GetUnitError, ThrowOnError>({
    ...options,
    url: '/api/client/unit/{unit_id}'
}); };

/**
 * Update Unit
 */
export const updateUnit = <ThrowOnError extends boolean = false>(options: Options<UpdateUnitData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateUnitResponse, UpdateUnitError, ThrowOnError>({
    ...options,
    url: '/api/client/unit/{unit_id}'
}); };

/**
 * Delete Unit
 */
export const deleteUnit = <ThrowOnError extends boolean = false>(options: Options<DeleteUnitData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteUnitResponse, DeleteUnitError, ThrowOnError>({
    ...options,
    url: '/api/client/unit/{unit_id}'
}); };

/**
 * Get All News
 */
export const getAllNews = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetAllNewsResponse, GetAllNewsError, ThrowOnError>({
    ...options,
    url: '/api/client/news/'
}); };

/**
 * Create News
 */
export const createNews = <ThrowOnError extends boolean = false>(options: Options<CreateNewsData, ThrowOnError>) => { return (options?.client ?? client).post<CreateNewsResponse, CreateNewsError, ThrowOnError>({
    ...options,
    url: '/api/client/news/'
}); };

/**
 * Get News
 */
export const getNews = <ThrowOnError extends boolean = false>(options: Options<GetNewsData, ThrowOnError>) => { return (options?.client ?? client).get<GetNewsResponse, GetNewsError, ThrowOnError>({
    ...options,
    url: '/api/client/news/{news_id}'
}); };

/**
 * Update News
 */
export const updateNews = <ThrowOnError extends boolean = false>(options: Options<UpdateNewsData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateNewsResponse, UpdateNewsError, ThrowOnError>({
    ...options,
    url: '/api/client/news/{news_id}'
}); };

/**
 * Patch News
 */
export const patchNews = <ThrowOnError extends boolean = false>(options: Options<PatchNewsData, ThrowOnError>) => { return (options?.client ?? client).patch<PatchNewsResponse, PatchNewsError, ThrowOnError>({
    ...options,
    url: '/api/client/news/{news_id}'
}); };

/**
 * Delete News
 */
export const deleteNews = <ThrowOnError extends boolean = false>(options: Options<DeleteNewsData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteNewsResponse, DeleteNewsError, ThrowOnError>({
    ...options,
    url: '/api/client/news/{news_id}'
}); };

/**
 * Generate Barcode
 */
export const generateBarcode = <ThrowOnError extends boolean = false>(options: Options<GenerateBarcodeData, ThrowOnError>) => { return (options?.client ?? client).post<GenerateBarcodeResponse, GenerateBarcodeError, ThrowOnError>({
    ...options,
    url: '/api/client/barcode/generate-barcode/'
}); };

/**
 * Get Zipcode
 */
export const getZipcode = <ThrowOnError extends boolean = false>(options: Options<GetZipcodeData, ThrowOnError>) => { return (options?.client ?? client).post<GetZipcodeResponse, GetZipcodeError, ThrowOnError>({
    ...options,
    url: '/api/client/address/get_zipcode/'
}); };

/**
 * Test
 */
export const test = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<TestResponse, TestError, ThrowOnError>({
    ...options,
    url: '/api/admin/test/test'
}); };