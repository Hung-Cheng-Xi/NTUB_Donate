// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { GetDonationsApiClientDonationGetData, GetDonationsApiClientDonationGetError, GetDonationsApiClientDonationGetResponse, CreateDonationApiClientDonationPostData, CreateDonationApiClientDonationPostError, CreateDonationApiClientDonationPostResponse, GetDonationPurposesApiClientDonationPurposeGetData, GetDonationPurposesApiClientDonationPurposeGetError, GetDonationPurposesApiClientDonationPurposeGetResponse, GetDonationPurposeApiClientDonationPurposeDonationPurposeIdGetData, GetDonationPurposeApiClientDonationPurposeDonationPurposeIdGetError, GetDonationPurposeApiClientDonationPurposeDonationPurposeIdGetResponse, GetAnnouncementsApiClientAnnouncementGetData, GetAnnouncementsApiClientAnnouncementGetError, GetAnnouncementsApiClientAnnouncementGetResponse, GetAnnouncementApiClientAnnouncementAnnouncementIdGetData, GetAnnouncementApiClientAnnouncementAnnouncementIdGetError, GetAnnouncementApiClientAnnouncementAnnouncementIdGetResponse, GetRegulationsApiClientRegulationGetData, GetRegulationsApiClientRegulationGetError, GetRegulationsApiClientRegulationGetResponse, GetRegulationApiClientRegulationRegulationIdGetData, GetRegulationApiClientRegulationRegulationIdGetError, GetRegulationApiClientRegulationRegulationIdGetResponse, GenerateBarcodeApiClientBarcodeGenerateBarcodePostData, GenerateBarcodeApiClientBarcodeGenerateBarcodePostError, GenerateBarcodeApiClientBarcodeGenerateBarcodePostResponse, GetZipcodeApiClientAddressGetZipcodePostData, GetZipcodeApiClientAddressGetZipcodePostError, GetZipcodeApiClientAddressGetZipcodePostResponse, LoginApiAdminAuthLoginPostData, LoginApiAdminAuthLoginPostError, LoginApiAdminAuthLoginPostResponse, RefreshApiAdminAuthRefreshPostError, RefreshApiAdminAuthRefreshPostResponse, ExcelExportApiAdminExcelExportPostData, ExcelExportApiAdminExcelExportPostError, ExcelExportApiAdminExcelExportPostResponse, RefreshFtpDataApiAdminFtpRefreshDataPostError, RefreshFtpDataApiAdminFtpRefreshDataPostResponse, ListFilesApiAdminFtpListFilesPostError, ListFilesApiAdminFtpListFilesPostResponse, GetRegulationsApiAdminRegulationGetData, GetRegulationsApiAdminRegulationGetError, GetRegulationsApiAdminRegulationGetResponse, CreateRegulationApiAdminRegulationPostData, CreateRegulationApiAdminRegulationPostError, CreateRegulationApiAdminRegulationPostResponse, GetRegulationApiAdminRegulationRegulationIdGetData, GetRegulationApiAdminRegulationRegulationIdGetError, GetRegulationApiAdminRegulationRegulationIdGetResponse, UpdateRegulationApiAdminRegulationRegulationIdPutData, UpdateRegulationApiAdminRegulationRegulationIdPutError, UpdateRegulationApiAdminRegulationRegulationIdPutResponse, DeleteRegulationApiAdminRegulationRegulationIdDeleteData, DeleteRegulationApiAdminRegulationRegulationIdDeleteError, DeleteRegulationApiAdminRegulationRegulationIdDeleteResponse, GetDonationPurposesApiAdminDonationPurposeGetData, GetDonationPurposesApiAdminDonationPurposeGetError, GetDonationPurposesApiAdminDonationPurposeGetResponse, CreateDonationPurposeApiAdminDonationPurposePostData, CreateDonationPurposeApiAdminDonationPurposePostError, CreateDonationPurposeApiAdminDonationPurposePostResponse, GetDonationPurposeApiAdminDonationPurposeDonationPurposeIdGetData, GetDonationPurposeApiAdminDonationPurposeDonationPurposeIdGetError, GetDonationPurposeApiAdminDonationPurposeDonationPurposeIdGetResponse, UpdateDonationPurposeApiAdminDonationPurposeDonationPurposeIdPutData, UpdateDonationPurposeApiAdminDonationPurposeDonationPurposeIdPutError, UpdateDonationPurposeApiAdminDonationPurposeDonationPurposeIdPutResponse, DeleteDonationPurposeApiAdminDonationPurposeDonationPurposeIdDeleteData, DeleteDonationPurposeApiAdminDonationPurposeDonationPurposeIdDeleteError, DeleteDonationPurposeApiAdminDonationPurposeDonationPurposeIdDeleteResponse, GetDonationsApiAdminDonationGetData, GetDonationsApiAdminDonationGetError, GetDonationsApiAdminDonationGetResponse, CreateDonationApiAdminDonationPostData, CreateDonationApiAdminDonationPostError, CreateDonationApiAdminDonationPostResponse, GetDonationApiAdminDonationDonationIdGetData, GetDonationApiAdminDonationDonationIdGetError, GetDonationApiAdminDonationDonationIdGetResponse, UpdateDonationApiAdminDonationDonationIdPutData, UpdateDonationApiAdminDonationDonationIdPutError, UpdateDonationApiAdminDonationDonationIdPutResponse, DeleteDonationApiAdminDonationDonationIdDeleteData, DeleteDonationApiAdminDonationDonationIdDeleteError, DeleteDonationApiAdminDonationDonationIdDeleteResponse, GetAnnouncementsApiAdminAnnouncementGetData, GetAnnouncementsApiAdminAnnouncementGetError, GetAnnouncementsApiAdminAnnouncementGetResponse, CreateAnnouncementApiAdminAnnouncementPostData, CreateAnnouncementApiAdminAnnouncementPostError, CreateAnnouncementApiAdminAnnouncementPostResponse, GetAnnouncementApiAdminAnnouncementAnnouncementIdGetData, GetAnnouncementApiAdminAnnouncementAnnouncementIdGetError, GetAnnouncementApiAdminAnnouncementAnnouncementIdGetResponse, UpdateAnnouncementApiAdminAnnouncementAnnouncementIdPutData, UpdateAnnouncementApiAdminAnnouncementAnnouncementIdPutError, UpdateAnnouncementApiAdminAnnouncementAnnouncementIdPutResponse, DeleteAnnouncementApiAdminAnnouncementAnnouncementIdDeleteData, DeleteAnnouncementApiAdminAnnouncementAnnouncementIdDeleteError, DeleteAnnouncementApiAdminAnnouncementAnnouncementIdDeleteResponse, GetUnitsApiAdminUnitGetError, GetUnitsApiAdminUnitGetResponse, CreateUnitApiAdminUnitPostData, CreateUnitApiAdminUnitPostError, CreateUnitApiAdminUnitPostResponse, GetUnitApiAdminUnitUnitIdGetData, GetUnitApiAdminUnitUnitIdGetError, GetUnitApiAdminUnitUnitIdGetResponse, UpdateUnitApiAdminUnitUnitIdPutData, UpdateUnitApiAdminUnitUnitIdPutError, UpdateUnitApiAdminUnitUnitIdPutResponse, DeleteUnitApiAdminUnitUnitIdDeleteData, DeleteUnitApiAdminUnitUnitIdDeleteError, DeleteUnitApiAdminUnitUnitIdDeleteResponse, GetUsersApiAdminUserGetError, GetUsersApiAdminUserGetResponse, CreateUserApiAdminUserPostData, CreateUserApiAdminUserPostError, CreateUserApiAdminUserPostResponse, GetUserApiAdminUserUserIdGetData, GetUserApiAdminUserUserIdGetError, GetUserApiAdminUserUserIdGetResponse, UpdateUserApiAdminUserUserIdPutData, UpdateUserApiAdminUserUserIdPutError, UpdateUserApiAdminUserUserIdPutResponse, DeleteUserApiAdminUserUserIdDeleteData, DeleteUserApiAdminUserUserIdDeleteError, DeleteUserApiAdminUserUserIdDeleteResponse } from './types.gen';

export const client = createClient(createConfig({
    baseURL: import.meta.env.VITE_API_BASE_URL,
}));

/**
 * Get Donations
 */
export const getDonationsApiClientDonationGet = <ThrowOnError extends boolean = false>(options?: Options<GetDonationsApiClientDonationGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationsApiClientDonationGetResponse, GetDonationsApiClientDonationGetError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/'
}); };

/**
 * Create Donation
 */
export const createDonationApiClientDonationPost = <ThrowOnError extends boolean = false>(options: Options<CreateDonationApiClientDonationPostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateDonationApiClientDonationPostResponse, CreateDonationApiClientDonationPostError, ThrowOnError>({
    ...options,
    url: '/api/client/donation/'
}); };

/**
 * Get Donation Purposes
 */
export const getDonationPurposesApiClientDonationPurposeGet = <ThrowOnError extends boolean = false>(options?: Options<GetDonationPurposesApiClientDonationPurposeGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationPurposesApiClientDonationPurposeGetResponse, GetDonationPurposesApiClientDonationPurposeGetError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/'
}); };

/**
 * Get Donation Purpose
 */
export const getDonationPurposeApiClientDonationPurposeDonationPurposeIdGet = <ThrowOnError extends boolean = false>(options: Options<GetDonationPurposeApiClientDonationPurposeDonationPurposeIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationPurposeApiClientDonationPurposeDonationPurposeIdGetResponse, GetDonationPurposeApiClientDonationPurposeDonationPurposeIdGetError, ThrowOnError>({
    ...options,
    url: '/api/client/donation_purpose/{donation_purpose_id}'
}); };

/**
 * Get Announcements
 */
export const getAnnouncementsApiClientAnnouncementGet = <ThrowOnError extends boolean = false>(options?: Options<GetAnnouncementsApiClientAnnouncementGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetAnnouncementsApiClientAnnouncementGetResponse, GetAnnouncementsApiClientAnnouncementGetError, ThrowOnError>({
    ...options,
    url: '/api/client/announcement/'
}); };

/**
 * Get Announcement
 */
export const getAnnouncementApiClientAnnouncementAnnouncementIdGet = <ThrowOnError extends boolean = false>(options: Options<GetAnnouncementApiClientAnnouncementAnnouncementIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetAnnouncementApiClientAnnouncementAnnouncementIdGetResponse, GetAnnouncementApiClientAnnouncementAnnouncementIdGetError, ThrowOnError>({
    ...options,
    url: '/api/client/announcement/{announcement_id}'
}); };

/**
 * Get Regulations
 */
export const getRegulationsApiClientRegulationGet = <ThrowOnError extends boolean = false>(options?: Options<GetRegulationsApiClientRegulationGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetRegulationsApiClientRegulationGetResponse, GetRegulationsApiClientRegulationGetError, ThrowOnError>({
    ...options,
    url: '/api/client/regulation/'
}); };

/**
 * Get Regulation
 */
export const getRegulationApiClientRegulationRegulationIdGet = <ThrowOnError extends boolean = false>(options: Options<GetRegulationApiClientRegulationRegulationIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetRegulationApiClientRegulationRegulationIdGetResponse, GetRegulationApiClientRegulationRegulationIdGetError, ThrowOnError>({
    ...options,
    url: '/api/client/regulation/{regulation_id}'
}); };

/**
 * Generate Barcode
 */
export const generateBarcodeApiClientBarcodeGenerateBarcodePost = <ThrowOnError extends boolean = false>(options: Options<GenerateBarcodeApiClientBarcodeGenerateBarcodePostData, ThrowOnError>) => { return (options?.client ?? client).post<GenerateBarcodeApiClientBarcodeGenerateBarcodePostResponse, GenerateBarcodeApiClientBarcodeGenerateBarcodePostError, ThrowOnError>({
    ...options,
    url: '/api/client/barcode/generate-barcode/'
}); };

/**
 * Get Zipcode
 */
export const getZipcodeApiClientAddressGetZipcodePost = <ThrowOnError extends boolean = false>(options: Options<GetZipcodeApiClientAddressGetZipcodePostData, ThrowOnError>) => { return (options?.client ?? client).post<GetZipcodeApiClientAddressGetZipcodePostResponse, GetZipcodeApiClientAddressGetZipcodePostError, ThrowOnError>({
    ...options,
    url: '/api/client/address/get_zipcode/'
}); };

/**
 * Login
 */
export const loginApiAdminAuthLoginPost = <ThrowOnError extends boolean = false>(options: Options<LoginApiAdminAuthLoginPostData, ThrowOnError>) => { return (options?.client ?? client).post<LoginApiAdminAuthLoginPostResponse, LoginApiAdminAuthLoginPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/auth/login/'
}); };

/**
 * Refresh
 */
export const refreshApiAdminAuthRefreshPost = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<RefreshApiAdminAuthRefreshPostResponse, RefreshApiAdminAuthRefreshPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/auth/refresh/'
}); };

/**
 * Excel Export
 */
export const excelExportApiAdminExcelExportPost = <ThrowOnError extends boolean = false>(options?: Options<ExcelExportApiAdminExcelExportPostData, ThrowOnError>) => { return (options?.client ?? client).post<ExcelExportApiAdminExcelExportPostResponse, ExcelExportApiAdminExcelExportPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/excel/export/'
}); };

/**
 * Refresh Ftp Data
 */
export const refreshFtpDataApiAdminFtpRefreshDataPost = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<RefreshFtpDataApiAdminFtpRefreshDataPostResponse, RefreshFtpDataApiAdminFtpRefreshDataPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/ftp/refresh-data'
}); };

/**
 * List Files
 */
export const listFilesApiAdminFtpListFilesPost = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<ListFilesApiAdminFtpListFilesPostResponse, ListFilesApiAdminFtpListFilesPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/ftp/list-files'
}); };

/**
 * Get Regulations
 */
export const getRegulationsApiAdminRegulationGet = <ThrowOnError extends boolean = false>(options?: Options<GetRegulationsApiAdminRegulationGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetRegulationsApiAdminRegulationGetResponse, GetRegulationsApiAdminRegulationGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/regulation/'
}); };

/**
 * Create Regulation
 */
export const createRegulationApiAdminRegulationPost = <ThrowOnError extends boolean = false>(options: Options<CreateRegulationApiAdminRegulationPostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateRegulationApiAdminRegulationPostResponse, CreateRegulationApiAdminRegulationPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/regulation/'
}); };

/**
 * Get Regulation
 */
export const getRegulationApiAdminRegulationRegulationIdGet = <ThrowOnError extends boolean = false>(options: Options<GetRegulationApiAdminRegulationRegulationIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetRegulationApiAdminRegulationRegulationIdGetResponse, GetRegulationApiAdminRegulationRegulationIdGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/regulation/{regulation_id}'
}); };

/**
 * Update Regulation
 */
export const updateRegulationApiAdminRegulationRegulationIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateRegulationApiAdminRegulationRegulationIdPutData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateRegulationApiAdminRegulationRegulationIdPutResponse, UpdateRegulationApiAdminRegulationRegulationIdPutError, ThrowOnError>({
    ...options,
    url: '/api/admin/regulation/{regulation_id}'
}); };

/**
 * Delete Regulation
 */
export const deleteRegulationApiAdminRegulationRegulationIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteRegulationApiAdminRegulationRegulationIdDeleteData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteRegulationApiAdminRegulationRegulationIdDeleteResponse, DeleteRegulationApiAdminRegulationRegulationIdDeleteError, ThrowOnError>({
    ...options,
    url: '/api/admin/regulation/{regulation_id}'
}); };

/**
 * Get Donation Purposes
 */
export const getDonationPurposesApiAdminDonationPurposeGet = <ThrowOnError extends boolean = false>(options?: Options<GetDonationPurposesApiAdminDonationPurposeGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationPurposesApiAdminDonationPurposeGetResponse, GetDonationPurposesApiAdminDonationPurposeGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation-purpose/'
}); };

/**
 * Create Donation Purpose
 */
export const createDonationPurposeApiAdminDonationPurposePost = <ThrowOnError extends boolean = false>(options: Options<CreateDonationPurposeApiAdminDonationPurposePostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateDonationPurposeApiAdminDonationPurposePostResponse, CreateDonationPurposeApiAdminDonationPurposePostError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation-purpose/'
}); };

/**
 * Get Donation Purpose
 */
export const getDonationPurposeApiAdminDonationPurposeDonationPurposeIdGet = <ThrowOnError extends boolean = false>(options: Options<GetDonationPurposeApiAdminDonationPurposeDonationPurposeIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationPurposeApiAdminDonationPurposeDonationPurposeIdGetResponse, GetDonationPurposeApiAdminDonationPurposeDonationPurposeIdGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation-purpose/{donation_purpose_id}'
}); };

/**
 * Update Donation Purpose
 */
export const updateDonationPurposeApiAdminDonationPurposeDonationPurposeIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateDonationPurposeApiAdminDonationPurposeDonationPurposeIdPutData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateDonationPurposeApiAdminDonationPurposeDonationPurposeIdPutResponse, UpdateDonationPurposeApiAdminDonationPurposeDonationPurposeIdPutError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation-purpose/{donation_purpose_id}'
}); };

/**
 * Delete Donation Purpose
 */
export const deleteDonationPurposeApiAdminDonationPurposeDonationPurposeIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteDonationPurposeApiAdminDonationPurposeDonationPurposeIdDeleteData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteDonationPurposeApiAdminDonationPurposeDonationPurposeIdDeleteResponse, DeleteDonationPurposeApiAdminDonationPurposeDonationPurposeIdDeleteError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation-purpose/{donation_purpose_id}'
}); };

/**
 * Get Donations
 */
export const getDonationsApiAdminDonationGet = <ThrowOnError extends boolean = false>(options?: Options<GetDonationsApiAdminDonationGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationsApiAdminDonationGetResponse, GetDonationsApiAdminDonationGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation/'
}); };

/**
 * Create Donation
 */
export const createDonationApiAdminDonationPost = <ThrowOnError extends boolean = false>(options: Options<CreateDonationApiAdminDonationPostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateDonationApiAdminDonationPostResponse, CreateDonationApiAdminDonationPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation/'
}); };

/**
 * Get Donation
 */
export const getDonationApiAdminDonationDonationIdGet = <ThrowOnError extends boolean = false>(options: Options<GetDonationApiAdminDonationDonationIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetDonationApiAdminDonationDonationIdGetResponse, GetDonationApiAdminDonationDonationIdGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation/{donation_id}'
}); };

/**
 * Update Donation
 */
export const updateDonationApiAdminDonationDonationIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateDonationApiAdminDonationDonationIdPutData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateDonationApiAdminDonationDonationIdPutResponse, UpdateDonationApiAdminDonationDonationIdPutError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation/{donation_id}'
}); };

/**
 * Delete Donation
 */
export const deleteDonationApiAdminDonationDonationIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteDonationApiAdminDonationDonationIdDeleteData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteDonationApiAdminDonationDonationIdDeleteResponse, DeleteDonationApiAdminDonationDonationIdDeleteError, ThrowOnError>({
    ...options,
    url: '/api/admin/donation/{donation_id}'
}); };

/**
 * Get Announcements
 */
export const getAnnouncementsApiAdminAnnouncementGet = <ThrowOnError extends boolean = false>(options?: Options<GetAnnouncementsApiAdminAnnouncementGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetAnnouncementsApiAdminAnnouncementGetResponse, GetAnnouncementsApiAdminAnnouncementGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/announcement/'
}); };

/**
 * Create Announcement
 */
export const createAnnouncementApiAdminAnnouncementPost = <ThrowOnError extends boolean = false>(options: Options<CreateAnnouncementApiAdminAnnouncementPostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateAnnouncementApiAdminAnnouncementPostResponse, CreateAnnouncementApiAdminAnnouncementPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/announcement/'
}); };

/**
 * Get Announcement
 */
export const getAnnouncementApiAdminAnnouncementAnnouncementIdGet = <ThrowOnError extends boolean = false>(options: Options<GetAnnouncementApiAdminAnnouncementAnnouncementIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetAnnouncementApiAdminAnnouncementAnnouncementIdGetResponse, GetAnnouncementApiAdminAnnouncementAnnouncementIdGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/announcement/{announcement_id}'
}); };

/**
 * Update Announcement
 */
export const updateAnnouncementApiAdminAnnouncementAnnouncementIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateAnnouncementApiAdminAnnouncementAnnouncementIdPutData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateAnnouncementApiAdminAnnouncementAnnouncementIdPutResponse, UpdateAnnouncementApiAdminAnnouncementAnnouncementIdPutError, ThrowOnError>({
    ...options,
    url: '/api/admin/announcement/{announcement_id}'
}); };

/**
 * Delete Announcement
 */
export const deleteAnnouncementApiAdminAnnouncementAnnouncementIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteAnnouncementApiAdminAnnouncementAnnouncementIdDeleteData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteAnnouncementApiAdminAnnouncementAnnouncementIdDeleteResponse, DeleteAnnouncementApiAdminAnnouncementAnnouncementIdDeleteError, ThrowOnError>({
    ...options,
    url: '/api/admin/announcement/{announcement_id}'
}); };

/**
 * Get Units
 */
export const getUnitsApiAdminUnitGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetUnitsApiAdminUnitGetResponse, GetUnitsApiAdminUnitGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/unit/'
}); };

/**
 * Create Unit
 */
export const createUnitApiAdminUnitPost = <ThrowOnError extends boolean = false>(options: Options<CreateUnitApiAdminUnitPostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateUnitApiAdminUnitPostResponse, CreateUnitApiAdminUnitPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/unit/'
}); };

/**
 * Get Unit
 */
export const getUnitApiAdminUnitUnitIdGet = <ThrowOnError extends boolean = false>(options: Options<GetUnitApiAdminUnitUnitIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetUnitApiAdminUnitUnitIdGetResponse, GetUnitApiAdminUnitUnitIdGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/unit/{unit_id}'
}); };

/**
 * Update Unit
 */
export const updateUnitApiAdminUnitUnitIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateUnitApiAdminUnitUnitIdPutData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateUnitApiAdminUnitUnitIdPutResponse, UpdateUnitApiAdminUnitUnitIdPutError, ThrowOnError>({
    ...options,
    url: '/api/admin/unit/{unit_id}'
}); };

/**
 * Delete Unit
 */
export const deleteUnitApiAdminUnitUnitIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteUnitApiAdminUnitUnitIdDeleteData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteUnitApiAdminUnitUnitIdDeleteResponse, DeleteUnitApiAdminUnitUnitIdDeleteError, ThrowOnError>({
    ...options,
    url: '/api/admin/unit/{unit_id}'
}); };

/**
 * Get Users
 */
export const getUsersApiAdminUserGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetUsersApiAdminUserGetResponse, GetUsersApiAdminUserGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/user/'
}); };

/**
 * Create User
 */
export const createUserApiAdminUserPost = <ThrowOnError extends boolean = false>(options: Options<CreateUserApiAdminUserPostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateUserApiAdminUserPostResponse, CreateUserApiAdminUserPostError, ThrowOnError>({
    ...options,
    url: '/api/admin/user/'
}); };

/**
 * Get User
 */
export const getUserApiAdminUserUserIdGet = <ThrowOnError extends boolean = false>(options: Options<GetUserApiAdminUserUserIdGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetUserApiAdminUserUserIdGetResponse, GetUserApiAdminUserUserIdGetError, ThrowOnError>({
    ...options,
    url: '/api/admin/user/{user_id}'
}); };

/**
 * Update User
 */
export const updateUserApiAdminUserUserIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateUserApiAdminUserUserIdPutData, ThrowOnError>) => { return (options?.client ?? client).put<UpdateUserApiAdminUserUserIdPutResponse, UpdateUserApiAdminUserUserIdPutError, ThrowOnError>({
    ...options,
    url: '/api/admin/user/{user_id}'
}); };

/**
 * Delete User
 */
export const deleteUserApiAdminUserUserIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteUserApiAdminUserUserIdDeleteData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteUserApiAdminUserUserIdDeleteResponse, DeleteUserApiAdminUserUserIdDeleteError, ThrowOnError>({
    ...options,
    url: '/api/admin/user/{user_id}'
}); };
