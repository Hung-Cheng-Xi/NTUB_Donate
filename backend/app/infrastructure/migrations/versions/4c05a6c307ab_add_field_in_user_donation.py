"""add field in User, Donation

Revision ID: 4c05a6c307ab
Revises: 7b1fb9b3dc8a
Create Date: 2024-09-21 16:47:46.373274

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import ENUM
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '4c05a6c307ab'
down_revision: Union[str, None] = '7b1fb9b3dc8a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# 定義 ENUM 類型
publicstatus = ENUM('FULL_PUBLIC', 'PARTIALLY_PUBLIC', 'NOT_PUBLIC', name='publicstatus')

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    publicstatus.create(op.get_bind(), checkfirst=True)
    
    op.add_column('donation', sa.Column('public_status', sa.Enum('FULL_PUBLIC', 'PARTIALLY_PUBLIC', 'NOT_PUBLIC', name='publicstatus'), nullable=True))
    op.add_column('user', sa.Column('user_birthday', sa.Date(), nullable=True))
    op.add_column('user', sa.Column('user_id_card', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('user', sa.Column('user_identity', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('user', sa.Column('user_household_address', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('user', sa.Column('user_correspondence_address', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.alter_column('user', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('user', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_column('user', 'user_address')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('user_address', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('user', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('user', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('user', 'user_correspondence_address')
    op.drop_column('user', 'user_household_address')
    op.drop_column('user', 'user_identity')
    op.drop_column('user', 'user_id_card')
    op.drop_column('user', 'user_birthday')
    op.drop_column('donation', 'public_status')

    publicstatus.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
